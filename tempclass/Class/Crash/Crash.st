//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Crash"
	Revision           = "0.0"
	GUID               = "{544E7B61-2308-4550-9F6A-42C4912E74E1}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(370,120)">
	<Channels>
		<Server Name="ServerDint" GUID="{912DD1F8-778E-425D-AA3C-B07016B57550}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="ServerUdint" GUID="{4A58CA79-6F11-4A46-93DF-D8AB693473F2}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
	</Channels>
</Class>
*)
Crash : CLASS
  //Servers:
	ServerDint 	: SvrChCmd_DINT;
	ServerUdint 	: SvrCh_UDINT;
  //Clients:
  //Variables:
		counter 	: DINT;
		idx2 	: DINT;
		idx 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ServerDint::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ServerUdint::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Crash::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CRASH
0$UINT, 0$UINT, (SIZEOF(::Crash))$UINT, 
2$UINT, 0$UINT, 0$UINT, 
TO_UDINT(549204591), "Crash", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Crash.ServerDint.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(103658100), "ServerDint", 
(::Crash.ServerUdint.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4091701318), "ServerUdint", 
//Clients:
END_FUNCTION


#define USER_CNT_Crash 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Crash] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Crash::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Crash, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	ServerDint.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ServerDint.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ServerUdint.pMeth			:= StoreMethod( #M_RD_DIRECT(), #ServerUdint::Write() );
	IF ServerUdint.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Crash::ServerDint::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	ServerDint := input;
  counter := 0;
  
  FOR Idx2:=10 TO 0 BY -1 DO
    if IDX2>10 then
      ServerDint:=idx2;
    end_if;
  counter += 1;
  END_FOR;  
  
	result := ServerDint;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL Crash::ServerUdint::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

	ServerUdint := input;
  
  counter := 0;
  
  FOR Idx:=10 TO 0 BY -1 DO
    if IDX>10 then
      ServerUdint:=idx;
    end_if;
  counter += 1;
  END_FOR;  
  
	result := ServerUdint;

END_FUNCTION
