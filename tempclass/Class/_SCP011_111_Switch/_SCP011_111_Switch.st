//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_SCP011_111_Switch"
	Revision           = "1.0"
	GUID               = "{A7767BF4-747C-445F-97B6-88605ED31EB8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Tool.ico"
	SharedCommandTable = "true"
	Objectsize         = "(474,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{A21E63D9-40D0-4A1B-B76D-AB22F2E77135}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SCP011_Place" GUID="{00185600-4C66-46D5-BA11-E8FDD44D8B2C}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SCP111_Place" GUID="{CF34E632-87BB-4152-AA35-00B76E8FDDCB}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="ModuleSelect" Required="true" Internal="false" Comment="Select the module used at this place&#13;&#10;0 = SCP011&#13;&#10;1 = SCP111"/>
		<Client Name="Place" Required="true" Internal="false" Comment="Place of SDIAS Modul [0..63]."/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="RamAnd"/>
		<Dokumentation Revision="1.0" Date="06.07.2021" Author="RamAnd" Company="Sigmatek" Description="First library version"/>
	</RevDoku>
</Class>
*)
_SCP011_111_Switch : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	SCP011_Place 	: SvrCh_UDINT;
	SCP111_Place 	: SvrCh_UDINT;
  //Clients:
	Place 	: CltCh_UDINT;
	ModuleSelect 	: CltCh_DINT;
  //Variables:
		bGotSelection 	: BOOL;
  //Functions:
	
	FUNCTION InitializePlaces;
	
	FUNCTION VIRTUAL GLOBAL SCP011_Place::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SCP111_Place::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _SCP011_111_Switch::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__SCP011_111_SWITCH
1$UINT, 0$UINT, (SIZEOF(::_SCP011_111_Switch))$UINT, 
3$UINT, 2$UINT, 0$UINT, 
TO_UDINT(2353643498), "_SCP011_111_Switch", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_SCP011_111_Switch.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::_SCP011_111_Switch.SCP011_Place.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(394221216), "SCP011_Place", 
(::_SCP011_111_Switch.SCP111_Place.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(279267), "SCP111_Place", 
//Clients:
(::_SCP011_111_Switch.Place.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2202636669), "Place", 
(::_SCP011_111_Switch.ModuleSelect.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1576288034), "ModuleSelect", 
END_FUNCTION


#define USER_CNT__SCP011_111_Switch 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__SCP011_111_Switch] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _SCP011_111_Switch::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__SCP011_111_Switch, pCmd := #vmt.CmdTable);
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SCP011_Place.pMeth			:= StoreMethod( #SCP011_Place::Read(), #M_NO_F() );
	IF SCP011_Place.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SCP111_Place.pMeth			:= StoreMethod( #SCP111_Place::Read(), #M_NO_F() );
	IF SCP111_Place.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL _SCP011_111_Switch::SCP011_Place::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

  if bGotSelection = FALSE then
    InitializePlaces();
  end_if;

	output := SCP011_Place;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _SCP011_111_Switch::SCP111_Place::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

  if bGotSelection = FALSE then
    InitializePlaces();
  end_if;

	output := SCP111_Place;

END_FUNCTION


FUNCTION _SCP011_111_Switch::InitializePlaces

  ModuleSelect := ModuleSelect.Read();
  Place          := Place.Read();

  if ModuleSelect = 0 then
    // SCP011 selected
    SCP011_Place := Place;
    SCP111_Place := DEACTIVATED_LSL;
  elsif ModuleSelect = 1 then
    // SCP111 selected
    SCP011_Place := DEACTIVATED_LSL;
    SCP111_Place := Place;
  else
    // None selected
    SCP011_Place := DEACTIVATED_LSL;
    SCP111_Place := DEACTIVATED_LSL;
  end_if;

  bGotSelection := TRUE;
  
END_FUNCTION
