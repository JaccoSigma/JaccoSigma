//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Class_Names"
	Revision           = "0.0"
	GUID               = "{41C189BB-8EDB-42AC-8223-8FA4A5DFE6D2}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(484,120)">
	<Channels>
		<Server Name="Client_Counter" GUID="{3B538F28-1B0B-4C38-B2EF-90521F27B82A}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Server0" GUID="{7665009E-E4BB-432C-B2FD-6885F9CEA896}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Server1" GUID="{3F6A1651-C3F5-4D58-A77E-E3FD8F35F5DA}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Server_Counter" GUID="{166423CF-C142-45C9-8A93-55ABC7DC9396}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="_SigCLib" Required="false" Internal="false"/>
		<Client Name="Client" Required="false" Internal="false"/>
		<Client Name="Client0" Required="false" Internal="false"/>
		<Client Name="Client1" Required="false" Internal="false"/>
		<Client Name="Client2" Required="false" Internal="false"/>
	</Channels>
</Class>
*)
Class_Names : CLASS
	TYPE
	  Names : ARRAY [0..100] OF CHAR;  //! <Type Public="true" Name="Names"/>
	END_TYPE
  //Servers:
	Server_Counter 	: SvrChCmd_DINT;
	Client_Counter 	: SvrCh_DINT;
	Server0 	: SvrCh_DINT;
	Server1 	: SvrCh_DINT;
  //Clients:
	_SigCLib 	: CltChCmd_SigCLib;
	Client 	: CltChCmd__MultiTask;
	Client0 	: CltCh_DINT;
	Client1 	: CltCh_DINT;
	Client2 	: CltCh_DINT;
  //Variables:
		ServerNames : ARRAY [0..100] OF Names;

		ClientNames : ARRAY [0..100] OF Names;

		ClassName : ARRAY [0..100] OF CHAR;

		ObjectName : ARRAY [0..100] OF CHAR;

		SVRTypes : ARRAY [0..100] OF ChMode;

		CLITypes : ARRAY [0..100] OF ChMode;

		TotalDsc : ARRAY [0..5] OF ChDscEntry;

		first 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GLOBAL FindNames;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _MultiTask
#pragma usingLtd SigCLib


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Class_Names::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CLASS_NAMES
0$UINT, 0$UINT, (SIZEOF(::Class_Names))$UINT, 
4$UINT, 5$UINT, 0$UINT, 
TO_UDINT(2655780776), "Class_Names", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Class_Names.Server_Counter.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2701301679), "Server_Counter", 
(::Class_Names.Client_Counter.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2168572014), "Client_Counter", 
(::Class_Names.Server0.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2759080719), "Server0", 
(::Class_Names.Server1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3547532185), "Server1", 
//Clients:
(::Class_Names._SigCLib.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1893025107), "_SigCLib", TO_UDINT(77440046), "SigCLib", 0$UINT, 37$UINT, 
(::Class_Names.Client.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(935117779), "Client", TO_UDINT(2641766936), "_MultiTask", 1$UINT, 1$UINT, 
(::Class_Names.Client0.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3946242188), "Client0", 
(::Class_Names.Client1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2620510234), "Client1", 
(::Class_Names.Client2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(87589280), "Client2", 
END_FUNCTION


#define USER_CNT_Class_Names 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Class_Names] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Class_Names::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Class_Names, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	Server_Counter.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Server_Counter.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL Class_Names::Init
VAR
	ObjectNameSize : UDINT;
  ClassNameSize  : UDINT;
END_VAR
  
  if _FirstScan = TRUE then
    FindNames();    
    ObjectNameSize := _strlen(src:=sigclib_nameof_object(pthis:=this));
    ClassNameSize  := _strlen(src:=sigclib_nameof_class(pthis:=this));
    if sizeof(ObjectName) >= ObjectNameSize & sizeof(ClassName) >= ClassNameSize then
      _strcpy(dest:=#ObjectName[0], src:=sigclib_nameof_object(pthis:=this));
      _strcpy(dest:=#ClassName[0], src:=sigclib_nameof_class(pthis:=this));
    end_if;
  end_if;

END_FUNCTION


FUNCTION GLOBAL Class_Names::FindNames
VAR
  pObject         :^obj;
  pClassHeader    :^ClsHdr;
  IDX             :dint;
  Length          :udint;
  pName           :^char;
  ptype           :^ChMode;
  pTotal          :^ChDscEntry;
END_VAR

  //Pointer to obj header
  pObject           := LSL_GetHdr(this);
  
  //pointer to class header
  pClassHeader      := pObject^.pClsHdr;
  Server_Counter    := pClassHeader^.pDsc^.nSvrChs;
  Client_Counter    := pClassHeader^.pDsc^.nCltChs;
  
  pName := #pClassHeader^.aDscChs[0].pDsc^.Name.Text$char;
  ptype := #pClassHeader^.aDscChs[0].pDsc^.uiMode;
  pTotal:= #pClassHeader^.aDscChs[0].pDsc^;
  
  Length := 0;
  
  for IDX := 0 to Server_Counter - 1 do //Write all Server names to var
    _strcpy(#ServerNames[IDX][0],pName);
    Length := _strlen(src:=#ServerNames[IDX][0]);
    pName  += (Length+11);
    
    SVRTypes[IDX] := ptype^;
    ptype += (Length+11);
  end_for;
  
  for IDX := 0 to Client_Counter - 1 do //Write all Client names to var
    _strcpy(#ClientNames[IDX][0],pName);
    Length := _strlen(src:=#ClientNames[IDX][0]);
    if first < 2 then
      pName  += (Length+27);
      first += 1;
    else
      pName  += (Length+11);
    end_if;
    
    CLITypes[IDX] := ptype^;
    ptype += (35);
        
    TotalDsc[idx] := pTotal^;
    pTotal += (32); //length + 11 and "ClassSvr" + 11? lol no luck. 
  end_for;

END_FUNCTION