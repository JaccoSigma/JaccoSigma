//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_CanOpenSDOTab"
	Revision           = "1.0"
	GUID               = "{848D8671-62BC-421D-9B77-E51932D8B666}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_CanOpenSDOTab\Drive1.ico"
	SharedCommandTable = "true"
	Objectsize         = "(382,120)"
	Comment            = "Call provides SDO Parameter-Table.&#13;&#10;Must be overwritten by User, because default Table is empty!">
	<Channels>
		<Server Name="ClassSvr" GUID="{1286FB2E-6DF5-4569-91F1-658D61ED1645}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="WesAnd"/>
		<Dokumentation Revision="1.0" Date="08.08.2012" Author="WesAnd" Company="Sigmatek" Description="Initial Version"/>
	</RevDoku>
</Class>
*)
_CanOpenSDOTab : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
				//! <Function Comment="Methode is called from class _CanOpenBasic to get Pointer to SDO-Parametertable." Name="GetTabPtr"/>
	FUNCTION VIRTUAL GLOBAL GetTabPtr
		VAR_OUTPUT
			dTabPtr 	: DINT;			//! <Variable Comment="Pointer to SDO-Parametertable.&#13;&#10;Format: Index (2 Byte), SubIndex (1 Byte), Data (4 Byte), Length (1 Byte)." Name="GetTabPtr.dTabPtr"/>
		END_VAR;
	
	FUNCTION TAB ParaTab;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _CanOpenSDOTab::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__CANOPENSDOTAB
1$UINT, 0$UINT, (SIZEOF(::_CanOpenSDOTab))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(422246758), "_CanOpenSDOTab", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_CanOpenSDOTab.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT__CanOpenSDOTab 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__CanOpenSDOTab] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _CanOpenSDOTab::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__CanOpenSDOTab, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #GetTabPtr();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL _CanOpenSDOTab::GetTabPtr
	VAR_OUTPUT
		dTabPtr 	: DINT;
	END_VAR

  //Return Pointer to Table
  dTabptr := (#ParaTab())$DINT;

END_FUNCTION


FUNCTION TAB _CanOpenSDOTab::ParaTab

  // INDEX(2Byte)   SUBINDEX(1Byte)   DATA(4Byte)   LENGTH(1Byte)  
  16#200A$INT,      16#02$USINT,      3$DINT,       2$USINT,      // Set Accesslevel for CanOpen to 3

END_FUNCTION
